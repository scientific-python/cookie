[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "{{ cookiecutter.project_name.replace("-", "_") }}"
version = "0.1.0"
authors = [
    "{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>",
]
maintainers = [
    "{{ cookiecutter.maintainer }} <{{ cookiecutter.maintainer_email }}>",
]
homepage = "{{ cookiecutter.url }}"
repository = "{{ cookiecutter.url }}"
license = "BSD-3-Clause"
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"

classifiers = [
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Development Status :: 1 - Planning",
]

[tool.poetry.dependencies]
python = ">=3.7"
typing_extensions = { version = ">=3.7", python = "<3.8" }

pytest = { version = ">=6", optional = true }
pytest-cov = { version = ">=3", optional = true }
sphinx = { version = "^4.0", optional = true }
sphinx_book_theme = { version = ">=0.1.0", optional = true }
sphinx_copybutton = { version = ">=0.3.0", optional = true }

[tool.poetry.dev-dependencies]
pytest = ">= 6"
pytest-cov = ">= 3"

[tool.poetry.extras]
test = ["pytest", "pytest-cov"]
dev = ["pytest", "pytest-cov"]
docs = [
    "sphinx",
    "sphinx-book-theme",
    "sphinx_copybutton",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = [
    "tests",
]


[tool.mypy]
files = "src"
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


[tool.isort]
profile = "black"


[tool.pylint]
master.py-version = "3.7"
master.ignore-paths= ["src/{{ cookiecutter.project_name.replace("-", "_") }}/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "wrong-import-position",
]
