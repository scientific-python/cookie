[build-system]
{%- if cookiecutter.project_type == "trampolim" %}
requires = ["trampolim>=0.1.0"]
build-backend = "trampolim"
{%- elif cookiecutter.project_type == "whey" %}
requires = ["whey>=0.0.17"]
build-backend = "whey"
{%- elif cookiecutter.project_type == "pdm" %}
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"
{%- elif cookiecutter.project_type == "maturin" %}
requires = ["maturin>=0.12"]
build-backend = "maturin"
{%- elif cookiecutter.project_type == "hatch" %}
requires = ["hatchling"]
build-backend = "hatchling.build"
{%- elif cookiecutter.project_type == "setuptools621" %}
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
{%- else %}
requires = ["flit_core >=3.4"]
build-backend = "flit_core.buildapi"
{%- endif %}


[project]
name = "{{ cookiecutter.project_name.replace("-", "_") }}"
{%- if cookiecutter.project_type not in ["trampolim", "flit", "hatch"] %}
version = "0.1.0"
{%- endif %}
authors = [
  { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
{%- if cookiecutter.org == "Scikit-HEP" %}
maintainers = [
  { name = "The Scikit-HEP admins", email = "scikit-hep-admins@googlegroups.com" },
]
{%- endif %}
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
{%- if cookiecutter.license == "BSD" %}
  "License :: OSI Approved :: BSD License",
{%- elif cookiecutter.license == "Apache" %}
  "License :: OSI Approved :: Apache Software License",
{%- elif cookiecutter.license == "MIT" %}
  "License :: OSI Approved :: MIT License",
{%- endif %}
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]
{%- if cookiecutter.project_type in ["trampolim", "flit", "hatch"] %}
dynamic = ["version"]
{%- endif %}
dependencies = [
  "typing_extensions >=3.7; python_version<'3.8'",
]

[project.optional-dependencies]
test = [
  "pytest >=6",
  "pytest-cov >=3",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
]
docs = [
  "Sphinx>=4.0",
  "myst_parser>=0.13",
  "sphinx-book-theme>=0.1.0",
  "sphinx_copybutton",
]

[project.urls]
Homepage = "{{ cookiecutter.url }}"
"Bug Tracker" = "{{ cookiecutter.url }}/issues"
Discussions = "{{ cookiecutter.url }}/discussions"
Changelog = "{{ cookiecutter.url }}/releases"


{%- if cookiecutter.project_type == "whey" %}
[tool.whey]
source-dir = "src"
{%- elif cookiecutter.project_type == "trampolim" %}
[tool.trampolim]
module-location = "src"
{%- elif cookiecutter.project_type == "hatch" %}
[tool.hatch]
version.path = "src/{{ cookiecutter.project_name.replace("-", "_")  }}/__init__.py"
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]
{%- elif cookiecutter.project_type == "pdm" %}
[tool.pdm.dev-dependencies]
devtest = ["pytest", "pytest-cov"]
{%- endif %}


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.mypy]
files = "src"
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true


[tool.isort]
profile = "black"


[tool.pylint]
master.py-version = "3.7"
master.ignore-paths= ["src/{{ cookiecutter.project_name.replace("-", "_") }}/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "wrong-import-position",
]
