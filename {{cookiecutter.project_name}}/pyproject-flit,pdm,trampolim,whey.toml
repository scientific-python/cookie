[build-system]
{%- if cookiecutter.project_type == "trampolim" %}
requires = ["trampolim>=0.1.0"]
build-backend = "trampolim"
{%- elif cookiecutter.project_type == "whey" %}
requires = ["whey >=0.0.17"]
build-backend = "whey"
{%- elif cookiecutter.project_type == "pdm" %}
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"
{%- else %}
requires = ["flit_core >=3.4"]
build-backend = "flit_core.buildapi"
{%- endif %}


{%- if cookiecutter.project_type == "whey" %}
[tool.whey]
source-dir = "src"
{%- elif cookiecutter.project_type == "trampolim" %}
[tool.trampolim]
module-location = "src"
{%- endif %}


[project]
name = "{{ cookiecutter.project_name.replace("-", "_") }}"
{%- if cookiecutter.project_type != "trampolim" and cookiecutter.project_type != "flit" %}
version = "0.1.0"
{%- endif %}
authors = [
    { name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}" },
]
maintainers = [
    { name = "{{ cookiecutter.maintainer }}", email = "{{ cookiecutter.maintainer_email }}" },
]
license = { file = "LICENSE" }

description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"

requires-python = ">=3.6"

classifiers = [
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Development Status :: 1 - Planning",
]

{%- if cookiecutter.project_type == "trampolim" or cookiecutter.project_type == "flit" %}

dynamic = ["version"]
{%- endif %}

dependencies = [
    "typing_extensions >=3.7; python_version<'3.8'",
]

[project.optional-dependencies]
test = [
    "pytest >=6",
]
dev = [
    "pytest >=6",
]
docs = [
    "Sphinx~=3.0",
     "myst_parser>=0.13",
    "sphinx-book-theme>=0.1.0",
    "sphinx_copybutton",
]

[project.urls]
homepage = "{{ cookiecutter.url }}"


{%- if cookiecutter.project_type == "pdm" %}


[tool.pdm.dev-dependencies]
dev = ["pytest"]
{%- endif %}


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = [
    "tests",
]


[tool.pycln]
all = true


[tool.mypy]
files = "src"
python_version = "3.6"
warn_unused_configs = true

disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[tool.isort]
profile = "black"
